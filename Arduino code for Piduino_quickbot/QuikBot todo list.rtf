{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Quikbot to do list:\
\
0) test the code to make sure it implements the Piduino interface.\
\
1) calculate the ticks per revolution. We could use this to experiment with variious power levels and encoder values to see what the TICKS per full revolution might be. Implement a run to encoder function that \
a) Grabs the wheel encoder value;\
b) Sets (right or left) wheel power to some minimum value say 64\
c) runs a tight loop while real encoder value less than some set encoder value;\
\
==> completed #1 came up with anywhere from 178 to 200 ticks per revolution using 189 atm.\
\
2 ) Implement the servo and Time-in-flght sensor(s) logic to have it mounted in the front of the RedBotButton and scan circularly back and forth and grab sensor values from each of the 5 sensor orientations. and use these to populate the IR sensor array}